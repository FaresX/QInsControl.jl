var documenterSearchIndex = {"docs":
[{"location":"QInsControlCore/#QInsControl.QInsControlCore","page":"QInsControlCore","title":"QInsControl.QInsControlCore","text":"","category":"section"},{"location":"QInsControlCore/","page":"QInsControlCore","title":"QInsControlCore","text":"","category":"page"},{"location":"QInsControlCore/","page":"QInsControlCore","title":"QInsControlCore","text":"Modules = [QInsControl.QInsControlCore]","category":"page"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.Controller","page":"QInsControlCore","title":"QInsControl.QInsControlCore.Controller","text":"Controller(instrnm, addr)\n\nconstruct a Controller to send commands to the instrument determined by (instrnm, addr). A Controller has three ways to send commands to the Processor: wirte read query.\n\njulia> ct(write, cpu, \"*IDN?\", Val(:write))\n\"done\"\n\njulia> ct(read, cpu, Val(:read))\n\"read\"\n\njulia> ct(query, cpu, \"*IDN?\", Val(:query))\n\"query\"\n\nthe commands needed to execute is not necessary to be wirte, read or query.\n\njulia> idn_get(instr) = query(instr, \"*IDN?\")\nidn_get (generic function with 1 method)\n\njulia> ct(idn_get, cpu, Val(:read))\n\"query\"\n\nthe definition of function idn_get must happen before the Controller ct is logged in or one can log out and log in again.\n\n\n\n\n\n","category":"type"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.Processor","page":"QInsControlCore","title":"QInsControl.QInsControlCore.Processor","text":"Processor()\n\nconstruct a Processor to deal with the commands sended into by Controllers.\n\n\n\n\n\n","category":"type"},{"location":"QInsControlCore/#Base.read-Tuple{QInsControl.QInsControlCore.GPIBInstr}","page":"QInsControlCore","title":"Base.read","text":"read(instr)\n\nread the instrument.\n\n\n\n\n\n","category":"method"},{"location":"QInsControlCore/#Base.write-Tuple{QInsControl.QInsControlCore.GPIBInstr, AbstractString}","page":"QInsControlCore","title":"Base.write","text":"write(instr, msg)\n\nwrite some message string to the instrument.\n\n\n\n\n\n","category":"method"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.connect!-Tuple{Any, QInsControl.QInsControlCore.GPIBInstr}","page":"QInsControlCore","title":"QInsControl.QInsControlCore.connect!","text":"connect!(rm, instr)\n\nconnect to an instrument with given ResourceManager rm.\n\nconnect!(instr)\n\nsame but with auto-generated ResourceManager.\n\n\n\n\n\n","category":"method"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.disconnect!-Tuple{QInsControl.QInsControlCore.GPIBInstr}","page":"QInsControlCore","title":"QInsControl.QInsControlCore.disconnect!","text":"disconnect!(instr)\n\ndisconnect the instrument.\n\n\n\n\n\n","category":"method"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.fast!-Tuple{QInsControl.QInsControlCore.Processor}","page":"QInsControlCore","title":"QInsControl.QInsControlCore.fast!","text":"fast!(cpu::Processor)\n\nchange the cpu mode to fast mode. Default mode is slow mode. The fast mode is not necessary in most cases.\n\n\n\n\n\n","category":"method"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.find_resources-Tuple{QInsControl.QInsControlCore.Processor}","page":"QInsControlCore","title":"QInsControl.QInsControlCore.find_resources","text":"find_resources(cpu::Processor)\n\nauto-detect available instruments.\n\n\n\n\n\n","category":"method"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.instrument-Tuple{Any, Any}","page":"QInsControlCore","title":"QInsControl.QInsControlCore.instrument","text":"instrument(name, addr)\n\ngenerate an instrument with (name, addr) which automatically determines the type of this instrument.\n\n\n\n\n\n","category":"method"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.isconnected-Tuple{QInsControl.QInsControlCore.GPIBInstr}","page":"QInsControlCore","title":"QInsControl.QInsControlCore.isconnected","text":"isconnected(instr)\n\ndetermine if the instrument is connected.\n\n\n\n\n\n","category":"method"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.login!-Tuple{QInsControl.QInsControlCore.Processor, QInsControl.QInsControlCore.Controller}","page":"QInsControlCore","title":"QInsControl.QInsControlCore.login!","text":"login!(cpu::Processor, ct::Controller)\n\nlog the Controller in the Processor which can be done before and after the cpu started.\n\n\n\n\n\n","category":"method"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.logout!-Tuple{QInsControl.QInsControlCore.Processor, QInsControl.QInsControlCore.Controller}","page":"QInsControlCore","title":"QInsControl.QInsControlCore.logout!","text":"logout!(cpu::Processor, ct::Controller)\n\nlog the Controller out the Processor.\n\nlogout!(cpu::Processor, addr::String)\n\nlog all the Controllers that control the instrument with address addr out the Processor.\n\n\n\n\n\n","category":"method"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.query-Tuple{QInsControl.QInsControlCore.GPIBInstr, AbstractString}","page":"QInsControlCore","title":"QInsControl.QInsControlCore.query","text":"query(instr, msg; delay=0)\n\nquery the instrument with some message string.\n\n\n\n\n\n","category":"method"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.reconnect!-Tuple{QInsControl.QInsControlCore.Processor}","page":"QInsControlCore","title":"QInsControl.QInsControlCore.reconnect!","text":"reconnect!(cpu::Processor)\n\nreconnect the instruments that log in the Processor.\n\n\n\n\n\n","category":"method"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.slow!-Tuple{QInsControl.QInsControlCore.Processor}","page":"QInsControlCore","title":"QInsControl.QInsControlCore.slow!","text":"slow!(cpu::Processor)\n\nchange the cpu mode to slow mode. Default mode is slow mode, which decrease the cpu cost.\n\n\n\n\n\n","category":"method"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.start!-Tuple{QInsControl.QInsControlCore.Processor}","page":"QInsControlCore","title":"QInsControl.QInsControlCore.start!","text":"start!(cpu::Processor)\n\nstart the Processor.\n\n\n\n\n\n","category":"method"},{"location":"QInsControlCore/#QInsControl.QInsControlCore.stop!-Tuple{QInsControl.QInsControlCore.Processor}","page":"QInsControlCore","title":"QInsControl.QInsControlCore.stop!","text":"stop!(cpu::Processor)\n\nstop the Processor.\n\n\n\n\n\n","category":"method"},{"location":"Workflow/#Add-Instruments","page":"Workflow","title":"Add Instruments","text":"","category":"section"},{"location":"Workflow/#auto-detect","page":"Workflow","title":"auto-detect","text":"","category":"section"},{"location":"Workflow/","page":"Workflow","title":"Workflow","text":"One can click  to auto-detect the available instruments in NI MAX. ","category":"page"},{"location":"Workflow/","page":"Workflow","title":"Workflow","text":"(Image: image)","category":"page"},{"location":"Workflow/#muanully-add","page":"Workflow","title":"muanully add","text":"","category":"section"},{"location":"Workflow/","page":"Workflow","title":"Workflow","text":"Or manually add an instrument through clicking \"手动添加\" after filling the address. ","category":"page"},{"location":"Workflow/","page":"Workflow","title":"Workflow","text":"(Image: image)","category":"page"},{"location":"Workflow/#Control-Instruments","page":"Workflow","title":"Control Instruments","text":"","category":"section"},{"location":"Workflow/","page":"Workflow","title":"Workflow","text":"Once adding instruments finishes, one can click \"仪器设置和状态\" to query the state of specific instrument or set it. The controllable variables are classified by three types: sweep, set, read. For the sweep variable, it can be swept from the present value to the given value with difinite step size and delay. For the set variable, it can be set by the given value through inputing or simply clicking on the pre-defined optional value. For the read variable, it can be only queried. All these variables support selecting unit and whether it will auto update the state itself.","category":"page"},{"location":"Workflow/#Data-Aquiring","page":"Workflow","title":"Data Aquiring","text":"","category":"section"},{"location":"Workflow/#Data-Reviewing","page":"Workflow","title":"Data Reviewing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = QInsControl","category":"page"},{"location":"#QInsControl","page":"Home","title":"QInsControl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for QInsControl.","category":"page"}]
}
